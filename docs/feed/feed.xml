<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Andy Fitz</title>
	<subtitle>design, code, love</subtitle>
	
	<link href="https://ndftz.com/feed/feed.xml" rel="self"/>
	<link href="https://ndftz.com/"/>
	<updated>2021-04-15T00:00:00Z</updated>
	<id>https://ndftz.com/</id>
	<author>
		<name>Andy Fitzsimon</name>
		<email>andy@fitzsimon.com.au</email>
	</author>
	
	<entry>
		<title>Essential SVG tools</title>
		<link href="https://ndftz.com/posts/essential-svg-tools/"/>
		<updated>2021-04-15T00:00:00Z</updated>
		<id>https://ndftz.com/posts/essential-svg-tools/</id>
		<content type="html">&lt;p&gt;&lt;svg viewBox=&quot;-7 0 24 10&quot; style=&quot;height:15em; width:100%;background-color:#f87; fill:#fca&quot;&gt; &lt;path fill=&quot;#fff&quot; d=&quot;M-3 3H1V7H-3M8 7H13L10.5 3M5 3A2 2 0 105.001 3&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;This article contains SVG tools I reach for depending on need.&lt;br /&gt;
As the rifleman&#39;s creed goes: &lt;em&gt;“there are many like it but this one is mine”&lt;/em&gt;.&lt;br /&gt;
I like this list.&lt;/p&gt;
&lt;h2 id=&quot;preamble&quot;&gt;Preamble &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#preamble&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My affair with SVG began back when Adobe offered &lt;a href=&quot;https://www.w3.org/TR/1998/NOTE-PGML&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;PGML&lt;/a&gt;. I loved flash, but figured open standards would win the browser wars . You can read about&lt;a href=&quot;https://www.w3.org/Graphics/SVG/WG/wiki/Secret_Origin_of_SVG&quot;&gt; SVG&#39;s origins&lt;/a&gt; here&lt;/p&gt;
&lt;p&gt;Once W3C released the SVG draft: I figured it would own the web and be supported by all major browsers within months (it took years). Nevertheless, my courtship began.&lt;/p&gt;
&lt;p&gt;Fortunately SVG was more useful than just internet use.&lt;br /&gt;
By 2003, I had toyed with SVG in my studies.&lt;br /&gt;
By 2005, I had finally used SVG commercially thanks to Red Hat (and UTF-8).&lt;/p&gt;
&lt;p&gt;SVG assists me in many tasks – from websites, to presentations, to apps, to toolchains.&lt;br /&gt;
Here&#39;s what I use today:  Some are online tools, some are scripts, some are desktop apps, some are libraries. All incredibly powerful (and/or fun) for the right situation.&lt;br /&gt;
So here goes, get your bookmark tool of choice fired up:&lt;/p&gt;
&lt;h2 id=&quot;svgomg&quot;&gt;&lt;a href=&quot;https://jakearchibald.github.io/svgomg/&quot;&gt;SVGOMG&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#svgomg&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://jakearchibald.github.io/svgomg/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg viewBox=&quot;0 0 600 600&quot; style=&quot;height:15em; width:100%;background-color:#0097A7;&quot;&gt;&lt;path fill=&quot;#00BCD4&quot; d=&quot;M-2000 0H3000V395.68H-2000Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M269.224 530.33L519 395.485H269.224V530.33zM214.35 91.847H519v303.638H214.35V91.847z&quot; opacity=&quot;.22&quot;&gt;&lt;/path&gt;&lt;path fill=&quot;#FFF&quot; d=&quot;M80 341.735h189.224V530.33H80z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The webinterface to SVGO is so handy, I also use SVGO directly in apps and on the commandline.  Everybody should have local access to it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g svgo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you use &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;, &lt;a href=&quot;https://www.snowpack.dev/&quot;&gt;snowpack&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/vite-plugin-svg&quot;&gt;vite-svg-plugin&lt;/a&gt; etc you likely use it too.&lt;br /&gt;
The plugins are fascinating and have bailed me out many times.&lt;/p&gt;
&lt;h2 id=&quot;svg-path-editor&quot;&gt;&lt;a href=&quot;https://yqnn.github.io/svg-path-editor/&quot;&gt;SVG Path Editor&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#svg-path-editor&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://yqnn.github.io/svg-path-editor/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg viewBox=&quot; -1-1 15 15&quot; style=&quot;height:15em; width:100%;background-color:#678; fill:#eee&quot;&gt;  &lt;path d=&quot;M 4 8 L 10 1 L 13 0 L 12 3 L 5 9 C 6 10 6 11 7 10 C 7 11 8 12 7 12 A 1.42 1.42 0 0 1 6 13 A 5 5 0 0 0 4 10 Q 3.5 9.9 3.5 10.5 T 2 11.8 T 1.2 11 T 2.5 9.5 T 3 9 A 5 5 90 0 0 0 7 A 1.42 1.42 0 0 1 1 6 C 1 5 2 6 3 6 C 2 7 3 7 4 8 M 10 1 L 10 3 L 12 3 L 10.2 2.8 L 10 1&quot;&gt;&lt;/path&gt; &lt;/svg&gt;&lt;/a&gt;&lt;br /&gt;
I use this now more than even &lt;a href=&quot;http://www.inkscape.org/&quot;&gt;Inkscape&lt;/a&gt; for simple illustrations, and I really wish the preview would let me add my CSS. But still, this thing is pure GOLD!&lt;br /&gt;
When finishing an illustration I often return to this tool and go path by path to reduce unnessecary coordinates and operators. Stealing a few decimals here and there, replacing cubic bezier path operators with more optimal ones like quadratics or arcs.&lt;/p&gt;
&lt;p&gt;SVG path editor will dramatically improve your understanding of the SVG path system.&lt;br /&gt;
Also try out this &lt;a href=&quot;https://svg-path-visualizer.netlify.app/#M5%208.5l3-4c2-3-3-4-3-1%200-3-5-2-3%201z&quot;&gt;SVG path visualizer&lt;/a&gt;  I put the heart from this article in it&#39;s URL param - very handy when teaching SVG&lt;/p&gt;
&lt;h2 id=&quot;svg-crop&quot;&gt;&lt;a href=&quot;https://svgcrop.com/&quot;&gt;SVG Crop&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#svg-crop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://svgcrop.com/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg viewBox=&quot;0 -1 10 12&quot; style=&quot;height:15em; width:100%;background-color:#123; stroke-width:.5; stroke:#e3e6e9; stroke-miterlimit:9&quot;&gt;&lt;path fill=&quot;#7298a0&quot; d=&quot;M 5 1 a 4 4 0 1 0 0.001 0 &quot;&gt;&lt;/path&gt;&lt;path d=&quot;M 1 1 h 4 l -2 8z&quot; stroke=&quot;#123&quot; stroke-width=&quot;1&quot;&gt;&lt;/path&gt;&lt;path fill=&quot;#a43365&quot; d=&quot;M 1 1 h 4 l -2 8z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Remove the extra margin from around your SVG content so the file is easy to work with.&lt;br /&gt;
&lt;a href=&quot;http://svgcrop.com/&quot;&gt;SVGcrop.com&lt;/a&gt; resizes the SVG artboard by changing the &lt;code&gt;viewBox=&amp;quot;..&lt;/code&gt; attribute&lt;br /&gt;
It&#39;s not 100% bulletproof (invisible shapes like clippaths will affect the viewBox) but handy all the same&lt;/p&gt;
&lt;h2 id=&quot;svg-url-encoder&quot;&gt;&lt;a href=&quot;https://yoksel.github.io/url-encoder/&quot;&gt;SVG URL Encoder&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#svg-url-encoder&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Inline SVG into CSS - hey it&#39;s a gnarly technique but I still find myself throwing SVG into pseudo elements all the time. Think of the saved HTTP request!&lt;br /&gt;
This tool from Yoksel makes it super easy!&lt;/p&gt;
&lt;h2 id=&quot;relative-clip-path&quot;&gt;&lt;a href=&quot;https://yoksel.github.io/relative-clip-path/&quot;&gt;Relative clip-path &lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#relative-clip-path&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For turning SVG paths into CSS-friendly &lt;code&gt;clip-path&lt;/code&gt; coordinates. Super handy.&lt;/p&gt;
&lt;h2 id=&quot;svg-fitler-builder&quot;&gt;&lt;a href=&quot;https://svgfilters.com/&quot;&gt;SVG Fitler Builder&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#svg-fitler-builder&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://svgfilters.com/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;height:15em; width:100%;background-color:#4b5ca3;&quot; viewBox=&quot;0 -10 119.9 164.8&quot;&gt;&lt;path fill=&quot;#6795e9&quot; d=&quot;M75.2 79.3a22.9 22.9 0 0043.5 0zm-3.7 23.8a23.1 23.1 0 00-26.9 3.2c-7.2 7-8.1 18-3.6 26.8z&quot;&gt;&lt;/path&gt;&lt;path fill=&quot;#41bfd0&quot; d=&quot;m97.5 50c-4.9 0-10 1.6-13 4.3a1.6 1.6 0 00-.2 0a23.8 23.8 0 00-2 1.6c-5.7 4.3-23.6 13.7-46-1l-1.8-1.3a22.4 22.4 0 10.5 37.3a22.3 22.3 0 002.5-1.9c12.2-9.5 23-9 23-9h40.6c5.8 0 11.7 3 11.7 8.7a22.4 22.4 0 00-15.3-38.7zm-22.1 30c-.7 10.5-9.6 20.7-9.6 20.7l-13.5 20.2c-3.4 4.8-9 8-13.8 4.7c3 20 28.9 26 40.5 9.5c2.8-4 4.4-9.2 3.8-13.2l.1-.2-.1-2.5c-.3-6.8 1.2-19.3 18.2-24.5a22.9 22.9 0 01-25.5-14.7zm37.4 8.6zzzm-52.8-88.6a23 23 0 10.001 0&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;br /&gt;
Creating complex SVG Filters is incredibly hard, Thankfully we have this brilliant tool.&lt;br /&gt;
There&#39;s an alternative &lt;a href=&quot;https://yoksel.github.io/svg-filters/#/&quot;&gt;SVG Filter Constructor&lt;/a&gt; by &lt;a href=&quot;https://yoksel.github.io/&quot;&gt;Yoksel&lt;/a&gt; with a less intimidating interface that&#39;s worth a look.&lt;/p&gt;
&lt;h2 id=&quot;svg-gradient-map-builder&quot;&gt;&lt;a href=&quot;https://yoksel.github.io/svg-gradient-map/#/&quot;&gt;SVG Gradient Map Builder&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#svg-gradient-map-builder&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Who doesn&#39;t love Duotone effects?  SVG Gradient Map filters make them achievable native on the web.&lt;br /&gt;
There&#39;s just one annoying catch.  when you are coding these you need to convert your R G and B into separate channels and divide by 255 then place them your R G and B numbers for different colours next to eachother - it feels kind of unnatural.&lt;br /&gt;
This tool makes creating a custom filter easy.&lt;/p&gt;
&lt;p&gt;If you want to automate this, I also &lt;a href=&quot;https://codepen.io/andyfitz/pen/KKagbqe&quot;&gt;wrote a CodePen&lt;/a&gt; that converts any array into swatches and a duotone effect.&lt;/p&gt;
&lt;h2 id=&quot;inkscape&quot;&gt;&lt;a href=&quot;https://inkscape.org/&quot;&gt;Inkscape&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#inkscape&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://inkscape.org/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg viewBox=&quot; 0 0 100 100&quot; style=&quot;height:15em; width:100%;background-color:#e2e6e9; fill:var(--dark)&quot;&gt;&lt;path d=&quot;M 40.8 7 L 7.2 41.3 C -5 55.2 14.9 53.7 23.1 57.8 C 27.3 59.8 12 63 15 66 C 18 69 32 71 35.6 75 C 39 78 29.5 81 32.4 83.9 C 35.4 86.9 42.1 84.1 43.4 91 C 44.3 96 55.6 93.2 61.1 89.1 C 64.1 86.1 55.5 86.4 58.5 83.4 C 65.8 75.9 72.5 80.7 75 73.2 C 76.3 69.5 63 67 67 64.5 C 75.7 59.5 105 56.6 91 42.5 L 56.2 7 Q 48.5 -1 40.8 7 Z M 79.4 73 C 78.8 75 91.9 76 91.9 72.8 C 90.1 67.6 81 68 79.4 73 Z M 32 78 Q 26 75 23 78 T 24 83 T 32 78 M 77.8 76.7 C 74 80.1 78 83.8 82 81.4 C 83 80.6 82 77.6 77.8 76.7 Z M 32.8 59.7 Q 41 62 50.5 63.4 C 52 63.6 51 65.2 49.3 65.6 C 45.7 66.6 28.3 59.6 32.8 59.7 Z M 54.1 9.4 L 67.3 22.9 Q 69.6 25.3 68 27.4 L 61.4 22 L 60 30 L 54.5 27 L 45.6 32.6 L 42.6 21 L 38 29 H 30.7 Q 23.9 29 30.1 22.6 L 43.1 9.4 Q 48.4 3.5 54.1 9.4 Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Isn&#39;t the evolution of open source desktop applications awesome?&lt;br /&gt;
&lt;a href=&quot;https://wiki.inkscape.org/wiki/index.php/InkscapeHistory&quot;&gt;Gill &amp;gt; Sodipodi &amp;gt; Inkscape&lt;/a&gt;&lt;br /&gt;
I&#39;ve loved this journey and especially love where it is now.&lt;br /&gt;
Run it on your linux machine, your mac .. its brilliant for creative exploration, and especially illustration.&lt;br /&gt;
I&#39;ve used Inkscape since it&#39;s inception. Demoed it around the planet and pleaded for top designers to consider it. I could go on and on but let me just say it&#39;s &lt;strong&gt;the very best tool for illustration of complex paths&lt;/strong&gt;. and leave the rest up to your imagination.&lt;/p&gt;
&lt;h2 id=&quot;penpot&quot;&gt;&lt;a href=&quot;https://penpot.app/&quot;&gt;Penpot&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#penpot&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://penpot.app/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg viewBox=&quot;0 -1 10 12&quot; style=&quot;height:15em; width:100%;background-color:#83f5d4; fill:none; stroke-width:.4; stroke:var(--dark)&quot;&gt;&lt;path d=&quot;M2.3 3.4V1.6L3.2.3l.9 1.3V2L5 .7 5.9 2v-.4L6.8.3l.9 1.3v1.8M5 4.8v5M2.3 2.5l-.9.5v5L5 9.8 8.6 8V3l-.9-.5M1.4 3L5 4.8 8.6 3M4.1 2v2.3M5.9 2v2.3M2.9.8h.6m1.2.4h.6M6.5.8h.6&quot;&gt;&lt;/path&gt;&lt;path stroke-width=&quot;.3&quot; d=&quot;M2.3 1.8h1.8m0 .4h1.8m0-.4h1.8m-4.5 0v2M5 2.2v2.6m1.8-3v2.1&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;br /&gt;
Early days to call this a Figma killer - But I do find it does most of what I want out of Figma (for free and freedom). Super impressed and excited to see where this project goes.&lt;/p&gt;
&lt;h2 id=&quot;rawgraphs&quot;&gt;&lt;a href=&quot;https://app.rawgraphs.io/&quot;&gt;RawGraphs &lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#rawgraphs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://app.rawgraphs.io/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg viewBox=&quot;0 0 14 5&quot; style=&quot;height:15em;width:100%;background-color:#f2f6fa; font-family:Work Sans, sans-serif; font-weight:300;&quot; fill=&quot;#0dc4a3&quot;&gt;&lt;text font-size=&quot;2&quot; x=&quot;7&quot; y=&quot;3&quot; text-anchor=&quot;middle&quot; dominant-baseline=&quot;middle&quot;&gt;&lt;tspan fill=&quot;#3e3e41&quot; font-weight=&quot;900&quot;&gt;RAW&lt;/tspan&gt;Graphs&lt;/text&gt;&lt;/svg&gt;&lt;/a&gt;&lt;br /&gt;
Brilliant way to pre-render beautiful data graphics, create the layout in rawgraphs then style with your own CSS.&lt;/p&gt;
&lt;h2 id=&quot;librsvg&quot;&gt;&lt;a href=&quot;https://gitlab.gnome.org/GNOME/librsvg&quot;&gt;librSVG&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#librsvg&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;svg viewBox=&quot;0 0 10 10&quot; style=&quot;height:15em;width:100%;background-color:#555&quot; fill=&quot;none&quot; stroke=&quot;#eee&quot; stroke-width=&quot;.4&quot;&gt;&lt;path d=&quot;M2 4A1 1 0 102.001 4M7 1A1 1 0 107.001 1M2 5 7 7V2M5.5 6.9 7 8.4 8.5 6.9 7 5.4Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;This is a blazingly fast library to work with SVG files (used in ImageMagick and heaps more)&lt;br /&gt;
If you are a performance-driven developer, &lt;a href=&quot;https://gitlab.gnome.org/GNOME/librsvg/-/blob/master/src/bin/rsvg-convert.rs&quot;&gt;RSVG convert&lt;/a&gt; in particular will blow your mind. Also you should follow &lt;a href=&quot;https://people.gnome.org/~federico/blog/tag/librsvg.html&quot;&gt;Federico Mena-Quintero&lt;/a&gt; Who is dragging RSVG into the future with Rust.&lt;/p&gt;
&lt;h2 id=&quot;imagetracer-js&quot;&gt;&lt;a href=&quot;https://github.com/jankovicsandras/imagetracerjs&quot;&gt;Imagetracer JS&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#imagetracer-js&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are many bitmap to vector tracers like &lt;a href=&quot;http://potrace.sourceforge.net/&quot;&gt;potrace&lt;/a&gt;, autotrace etc. Imagetracer is the most promising for web developers and has a few tricks up it&#39;s sleeve.&lt;br /&gt;
Handy to have on the CLI too:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;imagetracerjs/nodecli&amp;gt;node nodecli ../in.png outfilename out.svg scale 10
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;2geom&quot;&gt;&lt;a href=&quot;https://gitlab.com/inkscape/lib2geom&quot;&gt;2geom&lt;/a&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#2geom&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://gitlab.com/inkscape/lib2geom&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;svg viewBox=&quot;0 0 10 10&quot; style=&quot;height:15em;width:100%;background-color:#eee&quot; fill=&quot;none&quot; stroke=&quot;#222&quot; stroke-linejoin=&quot;round&quot; stroke-linecap=&quot;round&quot;&gt;&lt;path stroke=&quot;#4e9a06&quot; d=&quot;M 0.8 3 C 1.8 2 3.8 2 3.8 4 C 3.8 6 0.8 5.4 0.8 7 H 3.8&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M 5.4 9 C 10.1 9 5.6 2.8 9 2 M 6.25 7 a 1.4 1.4 0 1 1 0.01 0 z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;br /&gt;
If you&#39;re building an app that needs to perform fast and accurate 2d computational geometry (boolean operations and way way more) you&#39;ll end up grateful for &lt;a href=&quot;http://njhurst.com/&quot;&gt;Nathan Hurst&lt;/a&gt; and all other contributors who made lib2geom possible.&lt;br /&gt;
Fun fact, Inkscape uses 2geom under the hood and also powers the amazing live path effects etc&lt;/p&gt;
&lt;h2 id=&quot;single-purpose-svg-generator-tools&quot;&gt;Single-purpose SVG generator tools &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#single-purpose-svg-generator-tools&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;svg viewBox=&quot;0 0 72 72&quot; style=&quot;height:15em;width:100%;background-color:#e2e6e9; font-family:Work Sans, system-ui, sans-serif; font-weight:300;&quot;&gt;&lt;path fill=&quot;#f93&quot; d=&quot;M14 50C7 36 25 6 42 5s32 27 22 42c-9 15-43 17-50 3z&quot;&gt;&lt;/path&gt;&lt;path fill=&quot;#f06&quot; d=&quot;M40 36c6 6 15 11 16 16-2 15-25 17-35 11C9 55 1 37 8 25c4-6 13-10 19-7 5 3 8 11 13 18&quot;&gt;&lt;/path&gt; &lt;text font-size=&quot;55&quot; x=&quot;36&quot; y=&quot;40&quot; text-anchor=&quot;middle&quot; dominant-baseline=&quot;middle&quot; fill=&quot;#fff&quot; font-weight=&quot;900&quot;&gt;B&lt;/text&gt;&lt;/svg&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.blobmaker.app/&quot;&gt;Blob maker&lt;/a&gt;  makes blobs - now part of the super cool &lt;a href=&quot;https://app.haikei.app/&quot;&gt;haikei app&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://getwaves.io/&quot;&gt;Wave Maker&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://codepen.io/georgedoescode/full/dyNVNjG&quot;&gt;Noise maker&lt;/a&gt; nice patterns of directional lines or dots&lt;br /&gt;
&lt;a href=&quot;https://yoksel.github.io/wave-maker/&quot;&gt;Arc Wave Maker&lt;/a&gt; nifty example of repeating arc paths&lt;br /&gt;
&lt;a href=&quot;https://www.misha.studio/snowflaker/&quot;&gt;Snowflakes&lt;/a&gt; Random snowflakes&lt;br /&gt;
&lt;a href=&quot;https://yoksel.github.io/snowflake/&quot;&gt;Snowflake Painter&lt;/a&gt; Design a snowflake with lines&lt;/p&gt;
&lt;!-- 
## [Create.Rip](https://create.rip)

Easily convert design files to web ready formats then extract individul elements. 
Accepts most traditional formats (PDF AI PSD TIFF etc) .

I&#39;d be remiss for not including this one.

https://create.rip is a web service we built at Outfit for ourselves with the help of [embersea](http://www.embersea.io/) and [devaway](https://devaway.io/)

We decided to host and share it with the world -

Dedicated in memory to Ihor Novikov author of the Uniconvertor and Sk1 who passed March 15th, 2021 hospitalised by a stroke and subsequently COVID-19 --&gt;
&lt;h2 id=&quot;what-else%3F&quot;&gt;What else? &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#what-else%3F&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well there&#39;s lots of nifty things I havent personally climbed into.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gliffy/canvas2svg&quot;&gt;canvas2svg &lt;/a&gt; - I have a feeling I&#39;ll get to know this library well someday.&lt;br /&gt;
&lt;a href=&quot;https://xmlgraphics.apache.org/batik/&quot;&gt;Apache Batik&lt;/a&gt;  - I used it quite a bit in the early days but it never took root in my toolchain.&lt;br /&gt;
&lt;a href=&quot;https://svgjs.com/docs/3.0/&quot;&gt;SVGJS&lt;/a&gt; It offers compelling shortcuts, I&#39;m just a fan of vanilla JS. This also goes for &lt;a href=&quot;http://snapsvg.io/&quot;&gt;SNAP SVG&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;thank-you-svg&quot;&gt;Thank you SVG &lt;a class=&quot;direct-link&quot; href=&quot;https://ndftz.com/posts/essential-svg-tools/#thank-you-svg&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;svg viewBox=&quot;-7 0 24 10&quot; style=&quot;height:15em; width:100%;background-color:#f87; fill:#fff&quot; stroke=&quot;#fca&quot; paint-order=&quot;stroke&quot; stroke-width=&quot;2&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M5 8.5l3-4c2-3-3-4-3-1 0-3-5-2-3 1z&quot;&gt;&lt;/path&gt; &lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;So there you have it, the best tools to help you with SVG.&lt;br /&gt;
By the way, all the images in this article were super-tiny inlined SVG - open web inspector and see for yourself.&lt;/p&gt;
&lt;p&gt;On a personal note:&lt;br /&gt;
There are heroes I&#39;d like to recognise; friends who moved SVG forward directly or indirectly - at least in my universe:&lt;br /&gt;
&lt;a href=&quot;https://mcc.id.au/&quot;&gt;Cam Mcormack&lt;/a&gt;, &lt;a href=&quot;https://raphlinus.github.io/&quot;&gt;Raph Levien&lt;/a&gt;, &lt;a href=&quot;https://svgees.us/&quot;&gt;Chris Lilley&lt;/a&gt;, &lt;a href=&quot;https://cworth.org/&quot;&gt;Carl Worth&lt;/a&gt;, &lt;a href=&quot;https://www.w3.org/People/Quin/&quot;&gt;Liam Quinn&lt;/a&gt;, &lt;a href=&quot;http://njhurst.com/&quot;&gt;Nathan Hurst&lt;/a&gt;, Peter Moulder, &lt;a href=&quot;http://tavmjong.free.fr/&quot;&gt;Tavmjong Bah&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/bryceharrington&quot;&gt;Bryce Harrington&lt;/a&gt;, &lt;a href=&quot;https://www.ekips.org/&quot;&gt;Aaron Spike&lt;/a&gt;, Jon Cruz, Bulia Byak, &lt;a href=&quot;https://gould.cx/ted/&quot;&gt;Ted Gould&lt;/a&gt;, &lt;a href=&quot;http://schepers.cc/&quot;&gt;Doug Schepers&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/domlachowicz&quot;&gt;Dom Lachowicz&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dodjiseketeli&quot;&gt;Dodji Seketeli&lt;/a&gt;, &lt;a href=&quot;https://blog.fishsoup.net/&quot;&gt;Owen Taylor&lt;/a&gt; and so many more.&lt;/p&gt;
</content>
	</entry>
</feed>
